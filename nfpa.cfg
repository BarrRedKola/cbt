### ----------------- User Settings ------------------ ###
#The username you will use later for sharing and accessing the
#central web site. Register first at http://ios.tmit.bme.hu/nfpa
#to take the desired username.
username=levi
### ================================================== ###

### ------ Filesystem & OS Related Settings ---------- ###
#The root directory of your installed PktGen. Required for copying
#helper scripts to control PktGen. OMIT THE LAST '/'.
PKTGEN_ROOT=/home/sdn-tmit/src/pktgen-dpdk

#The path to PktGen binary under the above-set Pktgen's root
#directory. So, pay attention that this is a relative path.
#OMIT THE LAST '/'.
PKTGEN_BIN=app/app/x86_64-native-linuxapp-gcc/pktgen

#The root directory of NFPA. It is necessary to set it correctly,
#since libraries and other directories are accessed relatively
#to this. OMIT THE LAST '/'.
MAIN_ROOT=/home/sdn-tmit/dataplane/src/NFPAv0.5

#The generated charts (plotted by Gnuplot) will be saved under
#this directory. It will be created (if not exists) under the
#above-set NFPA's main root.
RES_DIR=res

#The desired logging level. Log files are generated in log/
#directory under the above-set NFPA's main root.levels: DEBUG,
#INFO, WARNING, ERROR, CRITICAL (incase sensitive)
LOG_LEVEL=DEBUG
### ================================================== ###

### ------------- DPDK Related Settings  ------------- ###
#CPU Core Mask in HEX. For instance, 'e' means 1110 in binary
#indicating that the usable CPU cores' ids are 1,2,3. Or if
#you set 2e, it means that you want to use core 5,3,2,1. Note
#that 1 core per NIC port should be allocated.
cpu_core_mask=f

#Port mask in HEX. For instance, '3' means (11 in BIN) that
#two port will be used. This is the common case. However, it
#is possible to use one port for sending and receiving the traffic
#(for instance, if you have one 40GNIC with only one port).
#In such cases port mask should be '1' (01 in BIN) and accordingly
#both the sendPort and recvPort (to be set later) should be
#'0'!
port_mask=3

#Number of memory channels to use (e.g., 4). If not sure, use
#4!
mem_channels=4

#Set here which core to be used for which port (in decimal).
#If not sure, use "2.0,3.1".Multicore assignment only works
#if core mask is set like "[2-4].0" 
cpu_port_assign="2.0,3.1"
### ================================================== ###

### Network Function Hardware & Software Related Settings# 
#Set here the make of the CPU where the NF being tested is running,
#e.g., intel xeon, intel atom, intel core, amd opteron.
cpu_make=intel xeon

#Set here the model of the CPU where the NF being tested is
#running, e.g., e5-2620, i7-4600u.
cpu_model=e5-2620

#Set here the make of the NIC the NF being tested is using,
#e.g., intel, realtek, broadcom.
nic_make=intel

#Set here the model of the NIC the NF being tested is using,
#e.g., xl710, x710, 82599es, 8139.
nic_model=x710

#Set up here the port type, e.g. 10G, 40G, 100M in the highest
#INTEGER UNIT!!! So, USE 1_G instead of 1000_M!!!This is important
#to show/plot the theoretical results as well. Format: [bitrate]_[UNIT](case
#sensitive, use capitals for UNIT).
port_type=10_G

#Set here, whether the NF being tested is VIRTUALIZED. If it
#is running on a pure bare-metal, set 'no'.Otherwise, set the
#virtualization type, e.g., lxc,docker, kvm, xen,
#virtualbox.
virtualization=no

#Set here the NAME that the NF being tested is using, e.g.,
#ovs, xdpd, my_own_NAT.
vnf_name=ovs

#Set here the VERSION of the NF being tested, e.g., 2.3.90,
#0.7.5. In order to get to know the version, for instance, in
#case of OVS type ovs-vsctl -V.
vnf_version=2.4.90

#Set here the DRIVER that the NF being tested is using, e.g.,
#kernel, dpdk, netmap, odp.
vnf_driver=kernel

#Set here the VERSION of the used VNF's DRIVER, e.g., 3.16 (for
#linux kernel driver, 1.7.1, 1.8.0, 2.0.0 (for DPDK
#driver).
vnf_driver_version=3.16

#Set here the FUNCTION that the NF being tested is using, e.g.,
#bridge, l2-switch, l3-router, vxlan, mpls. Therefore, if only
#port forward rules are installed in the vnf, then use the term
#bridge. If l2-switch is set, then it is assumed that DMAC forwarding
#is used, i.e., corresponding L2 rules are installed in the
#flow table. It also infers that some traces, for instance,
#trXe and trXi could not be used in one measurement scenario.
#In such cases, please do two different measurements, even if
#the application is capable of doing both at the same
#time!
vnf_function=bridge

#Write here some comment to the function, for instance, ivshmem
#or userspace vhost for virtual ethernet, or other methods how
#the virtual interface are connected. So, anything you feel
#necessary to position the results.
vnf_comment=nothing special
### ================================================== ###

### ----- Gnuplot/Presenting Related Settings -------- ###
#Set up the unit of the desired packet/s results in order to
#obtain them more human readable. Set this to empty string if
#normal units shall be used!
pps_unit=M

#Set Bit/s unit here similarly to the above-set Packet/s.
bps_unit=G

#Define here the percentage of outlier results that should be
#omitted during calculating average, min and max values (format:
#5% -> 0.05). Use 0 to take into account all results!
outlier_min_percentage=0.15

#Define here the percentage of outlier results that should be
#omitted during calculating average, min and max values (format:
#5% -> 0.05). Use 0 to take into account all results!
outlier_max_percentage=0.15
### ================================================== ###

### --- Traffic Generating/PktGen Related Settings --- ###
#Define the desired packet sizes to be used. Note that in case
#of User defined synthetic traffic traces (traces that do not
#exists originally in NFPA's PCAP repository), PCAP files need
#to be existed in PCAP directory under NFPA's main root with
#the following naming convention: nfpa.[your_special_name].[packetsize]bytes.pcap,
#for instance, nfpa.mySynthetic.64bytes.pcap. If you edit the
#config file manually, use numerous packetSize= lines if multiple
#packetSizes are needed to be used.
packetSize=64
packetSize=1500

#Define here the desired syntethic traffic traces. Note that
#in case of User defined synthetic traffic traces (traces that
#do not exists originally in NFPA's PCAP directory under NFPA's
#main root with the following naming convention: nfpa.[your_special_name].[packetsize]bytes.pcap,
#for instance, nfpa.mySynthetic.64bytes.pcap. If two traffic
#types are separated via 1 'PIPE (|)' then two different pcaps
#could be loaded to the two ports, so bidirectional measurement
#will be done. For this traffic type irrespectively whether
#the latterbidirectional property is 1 or 0. On the other hand,
#biDir property works the same as it worked for other traffic
#types. Similarly to packetSize, if you edit the config file
#manually, use numerous trafficType= lines if multiple trafficTypes
#are need to be used.
trafficType=simple
trafficType=tr2e
trafficType=tr3e

#Set here your special realistic traffic trace, e.g., WIFI.
#NFPA will search for a pcap file in MAIN_ROOT/PCAP folder named
#nfpa.WIFI.pcap! So, name your pcap properly! Since realistic
#traces are not restricted to one and only packet size, this
#setting is not related to the above-set Packet Sizes property.
#Similarly to packetSize, if you edit the config file manually,
#use numerous realisticTraffic= lines if multiple trafficTypes
#are need to be used.
#realisticTraffic=

#Desired number of measurements. Pktgen will be started 'measurement_num'
#times per trafficTypes per packetSize. If not sure, use
#2!
measurement_num=2

#Time in seconds one measurement lasts, For instance, 20 means
#that traffic will be generated for 20 seconds for each pre-set
#packet sizes, or even 20 seconds long will be the pcap-files
#replayed (in case of synthetic or realistic traffic traces).
#If not sure, use 20!
measurementDuration=20

#The port desired to be used for sending. In case of bidirectional
#measurement, the word 'send' has no meaning, it is only for
#identifying the ports. If not sure, use 0!
sendPort=0

#The port desired to be used for receiving. In case of bidirectional
#measurement, the word 'receive' has no meaning, it is only
#for identifying the ports. If not sure, use 1!
recvPort=1

#Set this to 1 for bi-directional (duplex) measurement, or set
#it to 0 for uni-directional scenario (simplex).
biDir=1
### ================================================== ###


